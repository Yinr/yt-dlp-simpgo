name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    env:
      EXECUTABLE: yt-dlp-simpgo.exe

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4

      - name: Get tag
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc libgl1-mesa-dev xorg-dev libgtk-3-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev pkg-config libxxf86vm-dev gcc-mingw-w64-x86-64 gcc-mingw-w64-i686


      - name: Build binaries
        run: |
          mkdir -p dist
          # Windows
          GOOS=windows GOARCH=amd64 CC=x86_64-w64-mingw32-gcc CGO_ENABLED=1 go build -o dist/${{ env.EXECUTABLE }}-windows-amd64.exe -ldflags "-X 'main.Version=${{ steps.tag.outputs.tag }}' -s -w -H=windowsgui"
          # Linux
          GOOS=linux GOARCH=amd64 go build -o dist/${{ env.EXECUTABLE }}-linux-amd64 -ldflags "-X 'main.Version=${{ steps.tag.outputs.tag }}' -s -w"
          # macOS Intel
          # GOOS=darwin GOARCH=amd64 go build -o dist/${{ env.EXECUTABLE }}-darwin-amd64 -ldflags "-X 'main.Version=${{ steps.tag.outputs.tag }}' -s -w"
          # macOS Apple Silicon
          # GOOS=darwin GOARCH=arm64 go build -o dist/${{ env.EXECUTABLE }}-darwin-arm64 -ldflags "-X 'main.Version=${{ steps.tag.outputs.tag }}' -s -w"

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
